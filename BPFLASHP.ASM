* $Id: BPFLASHP.ASM,v 1.5 2000-12-13 13:43:26 peter Exp $
* Распределение Flash памяти данных давления.

* Максимальное количество измерений  - 256.

* Адреса       Описание данных
* 00000h - 0001FFh      Начальные адреса данных процессов измерений
* 00200h - 0002FFh      Параметры программирования прибора
* 00300h - 0007FFh      Промежуточные результаты измерения
* 00800h - 000FFFh      Результаты измерения
* 01000h - 1FFFFFh      Данные процессов измерений


* Результаты измерения.
* Результаты измерения имеют следующую структуру:

*  Адреса
*  внутри
* структуры  Описание данных        Примечания
* 00h - 02h        Время           Байт 00h - 0-5 разряды - секунды,
*              начала измерения    Байт 01h - 0-3 разряды - единицы минут,
*                                  Байт 01h - 4-7 разряды - десятки минут,
*                                  Байт 02h - 0-3 разряды - единицы часов,
*                                  Байт 02h - 4-7 разряды - десятки часов
* 03h            Систолическое        Диапазон измерения систолического
*                давление          давления от 48 до 300 мм.рт.ст.
*             (истинное значение
*                  минус 48)
* 04h          Среднее давление    Диапазон измерения среднего давления
*             (истинное значение       от 48 до 300 мм.рт.ст.
*                  минус 48)
* 05h          Диастолическое      Диапазон измерения диастолического
*                давление             давления от 0 до 255 мм.рт.ст.
* 06h          Частота сердечных   Диапазон измерения частоты сердечных
*                 сокращений          сокращений от 0 до 255 уд/мин.
* 07h           Код ошибки
*
* 000-Монитор запрограммирован и готов к исследованию
* 080-Отмена измерения пациентом
* 081-Напряжение источника питания ниже допустимого значения
* 082-Отсутствует (отсоединена) манжета
* 083-Манжета или пневмосистема в мониторе пропускают воздух
* 084-Пережата трубка манжеты
* 085-Систолическое АД пациента больше 270 мм рт. ст.
* 086-Низкий  уровень  сигнала (его отсутствие)
* 087-Время измерения АД превысило 2 мин
* 088, 089-Высокая двигательная активность пациента,
*     препятствующая проведению измерений
* 090-Обнаружение неисправности после включения монитора
* 091-Монитор после замены батарей не был запрограммирован
* 092-Слишком большое время измерения (более 2 мин)
* 093-Аккумуляторы полностью разряжены
* 094-Не удалось определить диастолу
* 095-Не удалось определить систолу
* 096-Не удалось определить частоту пульса
* 097-Артефакты движения или аритмия
* 098-Вся оперативная память монитора заполнена результатами.
*     Количество измерений превысило 150 (*)
* > 098-Измерение прервано из-за нештатного режима работы пневматики



*****************************************************************************
* очистка флеш
*****************************************************************************
FLCLR   LAR     AR1,#0D555h  ; 05555h,02AAAh,05555h,05555h,02AAAh,05555h
        LAR     AR2,#0AAAAh  ;   0AAh,  055h,  080h,  0AAh,  055h,  010h Erase
        MAR     *,AR1

        LACC    DPA0,0     ;чтение регистра данных порта
        AND     #0001FH     ;сбрасываем номер страницы и #CEF =0 (#CE)
                        ;разрешение работы с флеш
        SACL    DPA0       ;запоминаем данные в памяти
        OUT     DPA0,PA0   ;и выводим в порт
        SPLK    #0AAh,*,AR2   ;программируем флеш на стирание
        SPLK    #055h,*,AR1
        SPLK    #080h,*,AR1
        SPLK    #0AAh,*,AR2
        SPLK    #055h,*,AR1
        SPLK    #010h,*,AR1
        LACC    #07FFFh            ; T = 15 с.
	SPLK    #0800h,TMP+1
FLCLR1  SUB     #1
	RPT     TMP+1
        NOP
	SPLK    #1,TMP
	BCND    ERRCLR,LEQ
        BCND    FLCLR1,BIO
*
CLRCHK  LAR     AR0,#7FFFh
        LAR     AR1,#8000h
CLRCON  LACC    *+,0,AR0           ;чтение данных с флеш
        AND     #0FFh              ;маскируем младшие 8 бит
        XOR     #0FFh              ;приводим к нулю
        BCND    ERRCLR,NEQ         ;если не равно нулю, то неудалось стереть
        BANZ    CLRCON,*-,AR1      ;Branch on Auxiliary Register Not Zero
        LACC    DPA0
        ADD     #1,6       ;прибавляем 1 к "номеру странички"
        SACL    DPA0
        OUT     DPA0,PA0   ;выводим содержимое регистра в порт
        BIT     DPA0,3     ;вышел номер страницы за бит D11 ?
        BCND    CLRCHK,NTC ;продолжим проверку следующей "странички"
	SPLK    #0,TMP        ; Очистка завеpшилась успешно
*
ERRCLR  LACC    DPA0,0     ;читаем содержимое регистра данных порта
        OR      #0020H      ;выключаем выборку флеш #CEF =1 (#CE)
        SACL    DPA0       ;запоминаем состояние порта в памяти
        OUT     DPA0,PA0   ;выводим это в порт
        RET
****************
* очистка страницы флеш
* TMP - номер 64 кбайтной страницы
****************
FlashPageClear
        LAR     AR1,#0D555h  ; 05555h,02AAAh,05555h,05555h,02AAAh,SA (A20-16)
        LAR     AR2,#0AAAAh  ;   0AAh,  055h,  080h,  0AAh,  055h,  030h Sector Erase
        MAR     *,AR1

        LACC    DPA0,0     ;чтение регистра данных порта
        AND     #0001FH     ;сбрасываем номер страницы и #CEF =0 (#CE)
                        ;разрешение работы с флеш
	ADD     TMP,7 ; сдвиг для подхода к D7 сложенного номера страницы
        SACL    DPA0       ;запоминаем данные в памяти
        OUT     DPA0,PA0   ;и выводим в порт
        OR      #0020H      ;выключаем выборку флеш #CEF =1 (#CE)
        SACL    DPA0       ;запоминаем состояние порта в памяти
        SPLK    #0AAh,*,AR2   ;программируем флеш на стирание
        SPLK    #055h,*,AR1
        SPLK    #080h,*,AR1
        SPLK    #0AAh,*,AR2
        SPLK    #055h,*,AR1
        SPLK    #030h,*,AR1
        LACC    #07FFFh            ; T = 15 с.
	SPLK    #0800h,TMP+1
FLCLR2  SUB     #1
	RPT     TMP+1
        NOP
;        SPLK #1,TMP
        BCND    ERRCLR1,LEQ
        BCND    FLCLR2,BIO
*
ERRCLR1
        OUT     DPA0,PA0   ;выводим это в порт
        RET
****************
* проверка чистоты страницы флеш
* TMP - номер 64 кбайтной страницы
****************
FlashPageCheck
        MAR     *,AR1
        LACC    DPA0,0     ;чтение регистра данных порта
        AND     #0001FH     ;сбрасываем номер страницы и #CEF =0 (#CE)
                        ;разрешение работы с флеш
	ADD     TMP,7 ; сдвиг для подхода к D7 сложенного номера страницы
        SACL    DPA0       ;запоминаем данные в памяти
        OUT     DPA0,PA0   ;и выводим в порт
	OR      #0020H      ;выключаем выборку флеш #CEF =1 (#CE)
        SACL    DPA0       ;запоминаем состояние порта в памяти
;CLRCHK1
        LAR     AR0,#7FFFh
        LAR     AR1,#8000h
CLRCON1 LACC *+,0,AR0           ;чтение данных с флеш
        AND     #0FFh              ;маскируем младшие 8 бит
        XOR     #0FFh              ;приводим к нулю
        BCND    ERRCheck,NEQ       ;если не равно нулю, то нечисто
        BANZ    CLRCON1,*-,AR1      ;Branch on Auxiliary Register Not Zero
        ;ошибок не было
ERRCheck
        ; произошла ошибка
        OUT     DPA0,PA0   ;выводим это в порт
        RET
*************************
*       программирование флеш
*       Надо опpеделить
*       AFLMSB     15-20bit
*       AFLLSB      0-14bit,15bit=1
*       TMP    -  Входные данные
*       Если пpи выходе из подпpогpаммы ACC=0 все Ok.
* использует AR1,AR2,AR3
*************************
FLPROG  LACC 	DPA0         ; 05555h,02AAAh,05555h, PA
	AND  	#001Fh       ;   0AAh,  055h,  0A0h, PD  Program
*	ADD  	AFLMSB,6
	ADD  	FLADR+1,6
	SACL 	DPA0
	OUT  	DPA0,PA0
	OR   	#20h
	SACL 	DPA0
*	LACC 	AFLLSB
	LACC 	FLADR
	OR   	#8000h
	SACL 	TMP+1

	LACC 	FLADR
        AND	#07FFFh
	ADD  	#1
	SACL 	FLADR
	AND  	#07FFFh
	BCND 	FL_NoOver,NEQ
	SACL	FLADR
	LACC 	FLADR+1
	ADD  	#1
	SACL 	FLADR+1
FL_NoOver
	LAR  	AR1,#0D555h
	LAR  	AR2,#0AAAAh
	LAR  	AR3,TMP+1      ; PA
	MAR  	*,AR1
	SPLK 	#0AAh,*,AR2
	SPLK 	#055h,*,AR1
	SPLK 	#0A0h,*,AR3
	BLDD 	#TMP,*,AR1     ; PD из TMP во FLASH
	LACC 	#0FFh
FLPRG1  SUB  	#1
	RPT  	#1
	NOP
	BCND 	ERRPRG,LEQ
	BCND 	FLPRG1,BIO
	SPLK 	#0AAh,*,AR2
	SPLK 	#055h,*,AR1
	SPLK 	#0F0h,*,AR3
	BLDD 	*,#TMP+1,AR1   ; PD из FLASH в
	OUT  	DPA0,PA0
;        SPLK 	#0,TMP+3
	LACC 	TMP
	XOR  	TMP+1
	AND  	#0FFh
	RETC 	EQ
*
ERRPRG  OR 	#0FFh
;       SPLK 	#1,TMP+3
	OUT  	DPA0,PA0
	RET
*

*******
* чтение страницы
*  адрес для чтения, из него выбрать адрес страницы
*  ASFLMSB     15-20bit
*  AFLLSB      0-14bit
*	AR6 - куда загружать
* процедура берет байты из флеш и загружает парами в слова AR6
* то есть начальный адрес должен быть четным
******

	mRead_512b


***********
* чтение по адресу FLADR 2 kb данных в AR1
***********
Read2K

	LACC 	DPA0
	AND  	#01Fh
	ADD  	FLADR+1,6
	SACL 	DPA0
	OUT  	DPA0,PA0
	OR   	#20h
	SACL 	DPA0

	LACC    FLADR
	OR	#08000H
	SACL	TMP
	LAR  	AR6,TMP
	LAR	AR0,#07FFH
	MAR	*,AR6
Read2K_1
	LACC	*+,0,AR1
	SACL	*+,0,AR0
	BANZ    Read2K_1,*-,AR6
	OUT  	DPA0,PA0
	RET

*************************
*       чтение флеш
*       Надо опpеделить
*       AFLMSB     15-20bit
*       AFLLSB      0-14bit
*       ACC    -  Выходные данные
*************************
FLREAD
	MAR	*,AR7
	POPD	*-
	SAR     AR6,*-

	LACC 	DPA0
	AND  	#01Fh
	ADD  	FLADR+1,6
	SACL 	DPA0
	OUT  	DPA0,PA0
	OR   	#20h
	SACL 	DPA0

	LACC    FLADR
	OR	#08000H
	SACL	*
	LAR  	AR6,*
	MAR	*,AR6

	LACC	*,0,AR7
	SACL	*

	LACC 	FLADR
	AND	#07FFFh
	ADD  	#1
	SACL 	FLADR
	AND  	#07FFFh
	BCND 	FLR_NoOver,NEQ
	SACL	FLADR
	LACC 	FLADR+1
	ADD  	#1
	SACL 	FLADR+1
FLR_NoOver

	LACC	*
	AND	#0FFH

	OUT  	DPA0,PA0

	MAR	*,AR7
	MAR	*+,AR7
	LAR     AR6,*+
	PSHD	*

	RET
